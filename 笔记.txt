1、JavaScript是客户端和服务端的脚本语言，可以嵌入到HTML中，是比较热门的web开发语言。同时也是面向对象编程语言。

2、JavaScript基本类型有： 数据类型：string，number，boolean,null,undefined,array,object

3、JavaScript发布者布兰登・艾克

4.你如何对网站的文件和资源进行优化？
期待的解决方案包括：文件合并文件最小化/文件压缩使用CDN托管缓存的使用（多个域名来提供缓存)

---------------------------------------------------------
5.请说出三种减少页面加载时间的方法。（加载时间指感知的时间或者实际加载时间）
1.优化图片

2.图像格式的选择（GIF：提供的颜色较少，可用在一些对颜色要求不高的地方）

3.优化CSS（压缩合并css，如margin-top,margin-left…)

4.网址后加斜杠（如www.campr.com/目录，会判断这个“目录是什么文件类型，或者是目录。）

5.标明高度和宽度（如果浏览器没有找到这两个参数，它需要一边下载图片一边计算大小，如果图片很多，浏览器需要不断地调整页面。这不但影响速度，也影响浏览体验。当浏览器知道了高度和宽度参数后，即使图片暂时无法显示，页面上也会腾出图片的空位，然后继续加载后面的内容。从而加载时间快了，浏览体验也更好了。）

6.减少http请求（合并文件，合并图片）。

---------------------------------------------------------
http请求过程
1、域名解析
2、发起TCP的三次握手
3、建立起TCP连接后发起HTTP请求
4、服务端响应HTTP请求，向浏览器得到HTML代码
5、浏览器解析HTML代码，请求HTML代码中的资源
6、浏览器对页面进行渲染呈现给用户
---------------------------------------------------------
基本数据类型： string number null undefine boolean
parseInt() 将任何值转换成整数输出，失败返回NAN

---------------------------------------------------------

二叉树排序：
冒泡排序
闭包
---------------------------------------------------------
作用域链：
当JavaScript执行一段代码块的时候，就会创建一个作用域，又称为执行上下文。在页面加载完毕后首先会创建一个全局作用域，然后每执行一个函数，就会创建对应的一个作用域，每个作用域都有对应的作用域链。
作用： 用来解析标识符
---------------------------------------------------------
原型链：
JavaScript每个对象都有一个prototype属性，称之为原型。原型的值是一个对象，而这些对象又有自己的原型，形成了一个原型链。原型链的头是object
继承： 
	function Parent(name, age) {
			this.name = name;
			this.age = age;
		}
		Parent.prototype.Child = function() {
				alert(this.name + this.age)
		}

		var obj = new Parent('zhangsan', 10)
		alert(obj.name)
		alert(obj.age)
如何查找构造函数和原型中的属性？
构造函数.prototype 查看构造函数的原型属性
实例对象 .__proto__查看实例对象的构造函数的原型
实例对象.proto.constructor查看实例对象的构造函数
---------------------------------------------------------

强制类型转换：
parentInt() parentFloat() number
种隐式类型转换: == ===
---------------------------------------------------------
ajax请求的时候get和post方式的区别
一个在url后面 一个放在虚拟载体里面
有大小限制
安全问题
应用不同：一个是论坛等只需要请求的，一个是类似需改 密码的

---------------------------------------------------------

IE下的标准有哪些兼容性的写法
var ev = ev || window.ev
document.document.documentElement.clientWidth || document.body.clientWidth
var target = ev.target || ev.srcElement
---------------------------------------------------------


DOM怎样添加、移动、复制、创建和查找节点
// 创建新节点
createDocumentFragment()    //创建一个DOM片段
createElement()   //创建一个具体的元素
createTextNode()   //创建一个文本节点
// 添加、移除、替换、插入
appendChild()
removeChild()
replaceChild()
insertBefore() //在已有的子节点前插入一个新的子节点
// 查找
getElementsByTagName()    //通过标签名称
getElementsByName()    //通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)
getElementById()    //通过元素Id，唯一性

---------------------------------------------------------
如何阻止事件冒泡和默认事件
function stopBubble(e)
{
    if (e && e.stopPropagation)
        e.stopPropagation()
    else
        window.event.cancelBubble=true
}
return false
---------------------------------------------------------
jsonp跨域
本地存储
---------------------------------------------------------
去重
var arr = [12,12,15,45,45,56,23,16]
		var arr2 = []
		function de_weight(arr) {
			for (var i = 0; i < arr.length; i++) {
				if (arr2.indexOf(arr[i]) < 0) {
					arr2.push(arr[i])
				}
			}
			return arr2
		}
		
		console.log(de_weight(arr))

---------------------------------------------------
		GET和POST的区别，何时使用POST？
GET：一般用于信息获取，使用URL传递参数，对发送信息的数量也有限制，一般在2000个字符
POST：一般用于修改服务器上的资源，对发送的信息没有限制
GET方式需要使用Request.QueryString来获取变量的值，而POST方式通过R额quest.Form来获取变量的值，也就是说GET是通过地址栏传值，而Post是通过提交表单来传值。
然而，在以下情况中，请使用POST请求：
无法使用缓存文件（更新服务器上的文件或数据库）
向服务器发送大量数据（POST没有数据量限制）
发送包含未知字符的用户输入时，POST比GET更稳定也更可靠
35、Falsh、Ajax各自的优缺点，在使用中如何取舍？
Falsh适合处理多媒体，矢量图形、访问机器；对css、处理文本上不足，不容易被搜索。
Ajax对css、文本支持很好、支持搜索；多媒体、矢量图形、机器访问不足。
共同点：与服务器的无刷新传递消息、用户离线和在线状态，操作DOM
36、ajax过程
1、创建XMLHttpRequest对象，也就是创建一个异步调用对象。
2、创建一个新的HTTP请求，并指想向该HTTP请求的方法、URL及验证信息。
3、设置响应HTTP请求状态变化的函数。
4、发送HTTP请求。
5、获取异步调用返回的数据。
6、使用JavaScript和DOM实现局部刷新。
js延迟加载的方式有哪些？
defer和async，动态创建DOM方式（用得最多），按需异步载入js
如何解决跨越问题？
jsonp,iframe,window.name,window.postMessage
new操作符具体干了什么呢？
1.创建了一个空对象，并且this变量引用该对象，同时还继承了该函数的原型。
2.属性和方法被加入到this引用的对象中。
3.新创建的对象由this所引用，并且最后隐式的返回this。

var obj={};
obj.__proto__=Base.prototype;
Base.call(obj);
面向对象和类的区别？
简单的说类是对象的模板。
在js中没有类，所以在js中所谓的类就是构造函数，对象就是有构造函数创建出来的实例对象。面向对象就是使用面向对象的方式处理问题，面向对象是向过程进行封装。
对象的概念，面向对象编程的程序实际就是多个对象的集合，我们可以把所有的事物都抽象成对象，在程序设计中可以看作：对象=属性+方法。属性就是对象的数据，而方法就是对象的行为
类的概念，类是对象的模板，而对象是类的实例化。举个例子，汽车设计图可以看作是类，而具体的汽车就是对象。再比如有一个类是表示人，然后可以通过人这个模板来实例化出张三，李四...
面向对象有三大特性
抽象性，需要通过核心数据和特定环境才能描述对象的具体意义
封装性，封装就是讲数据和功能组合到一起，在js中对象就是键值对的集合，对象将属性和方法封装起来，方法将过程封装起来
继承性，将别人的属性的方法成为自己的，传统继承基于模板（类），js中继承基于构造函数
在js的计时器运行原理是怎样的，为什么可以触发计时器效果？计时器是多线程吗？
1.JavaScript引擎只有一个线程，强迫异步事件排队等待被执行。
2.setTimeout和setInterval本质上不同的地方是他们如何执行异步代码的。
3.如果一个定时器正在执行的时候被阻塞了，那么它将会被推迟到下一个可能的执行点，这既是使得延迟时间有可能会超过声明定时器时设置的值。
Interval如果有足够的时间来执行（大于指定的延迟），那么它将会无延迟的一个紧接着一个执行。
原理
计时器通过设定一定的时间段（毫秒）来异步的执行一段代码。因为JavaScript是一个单线程，计时器提供了一种绕过这种语言限制来执行代码的能力。
总结：
计时器是单线程的，需要等待上一个执行完，如果上一个没有执行完，下一个需要延迟执行，直到上一个执行完

-------------------------------------------------------------------------

1、HTTP 1.1支持长连接（PersistentConnection）和请求的流水线（Pipelining）处理

HTTP 1.0规定浏览器与服务器只保持短暂的连接，浏览器的每次请求都需要与服务器建立一个TCP连接，
服务器完成请求处理后立即断开TCP连接，服务器不跟踪每个客户也不记录过去的请求。
2.HTTP 1.1请求消息和响应消息都应支持Host头域，增加host字段
3、HTTP/1.1加入了一个新的状态码100（Continue）
4、HTTP/1.1中引入了Chunked transfer-coding来解决上面这个问题
5、HTTP/1.1在1.0的基础上加入了一些cache的新特性，当缓存对象的Age超过Expire时变为stale对象，
cache不需要直接抛弃stale对象，而是与源服务器进行重新激活（revalidation）。